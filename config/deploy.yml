# Rails 8 Weather App - AWS EC2 Production Deployment Configuration
# This file demonstrates Kamal deployment to AWS EC2 using best practices

# Name of your application. Used to uniquely configure containers.
service: rails-weather-app

# Name of the container image - UPDATE WITH YOUR REGISTRY
# For ECR: Just the repository name (rails-weather-app)
# For Docker Hub: YOUR_DOCKERHUB_USERNAME/rails-weather-app
image: rails-weather-app

# Deploy to these servers - UPDATE WITH YOUR EC2 ELASTIC IP
servers:
  web:
    - 3.18.35.126
    # Example: - 54.123.456.789

# Proxy configuration (SSL disabled - requires domain name)
# Extended timeout for t2.micro instances (Rails can take longer to boot)
proxy:
  healthcheck:
    timeout: 60
# Uncomment for SSL:
# proxy:
#   ssl: true
#   host: YOUR_DOMAIN.com
#   healthcheck:
#     timeout: 60

# Credentials for your image registry
registry:
  # For ECR (recommended): Use "AWS" as username
  # For Docker Hub: Use your Docker Hub username
  server: 011528294573.dkr.ecr.us-east-1.amazonaws.com
  username: AWS
  
  # For ECR: Use AWS ECR login token (automated by Kamal)
  # For Docker Hub: Use access token from Docker Hub
  password:
    - KAMAL_REGISTRY_PASSWORD

# Environment variables for the application
env:
  # Secret variables (stored in .kamal/secrets)
  secret:
    - RAILS_MASTER_KEY
  
  # Clear text environment variables
  clear:
    # Enable Solid Queue in Puma for background jobs
    SOLID_QUEUE_IN_PUMA: true
    
    # Production optimizations
    WEB_CONCURRENCY: 1  # t2.micro has 1 vCPU
    RAILS_MAX_THREADS: 5
    RAILS_ENV: production
    
    # Logging
    RAILS_LOG_LEVEL: info
    RAILS_LOG_TO_STDOUT: true

# Useful command aliases
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"
  restart: app restart
  status: app details

# Persistent storage for SQLite database and uploads
volumes:
  - "rails_weather_storage:/rails/storage"
  - "rails_weather_db:/rails/db"

# Asset bridging for zero-downtime deployments
asset_path: /rails/public/assets

# Docker image configuration
builder:
  arch: amd64
  # Optimize for production
  args:
    RUBY_VERSION: 3.4.2

# SSH configuration for EC2
ssh:
  user: ubuntu  # Default user for Ubuntu AMI
  keys:
    - ~/.ssh/rails-weather-app-key.pem

# Health check is handled automatically by Kamal
# Proxy configuration is managed by Kamal's built-in proxy